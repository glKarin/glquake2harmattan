#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1



NATASHA = release
#NATASHA = debug

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

configure: configure-stamp
configure-stamp:
	dh_testdir
	# Add here commands to configure the package.

	touch configure-stamp


build: build-stamp

build-stamp: configure-stamp 
	dh_testdir

	# Add here commands to compile the package.
	#$(MAKE) build_release
	$(MAKE) build_$(NATASHA)
	#docbook-to-man debian/quake2.sgml > quake2.1

	touch $@

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp

	# Add here commands to clean up after the build process.
	-$(MAKE) clean

	dh_clean 

	rm -rf $(NATASHA)arm/*

install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

	# Add here commands to install the package into debian/glquake2.
	#$(MAKE) DESTDIR=$(CURDIR)/debian/glquake2 install
	# shell
	cp $(CURDIR)/debian/quake2.sh $(CURDIR)/debian/glquake2/usr/share/quake2/SDLquake2
	cp $(CURDIR)/debian/glquake2.sh $(CURDIR)/debian/glquake2/usr/share/quake2/GLquake2
	# desktop
	cp $(CURDIR)/debian/glquake2.desktop $(CURDIR)/debian/glquake2/usr/share/applications/glquake2.desktop
	#cp $(CURDIR)/debian/quake2-48.png $(CURDIR)/debian/quake2/usr/share/icons/hicolor/48x48/apps/quake2.png
	#cp $(CURDIR)/debian/quake2-64.png $(CURDIR)/debian/quake2/usr/share/icons/hicolor/64x64/apps/quake2.png
	cp $(CURDIR)/debian/glquake2_64.png $(CURDIR)/debian/glquake2/usr/share/icons/hicolor/64x64/apps/glquake2_64.png
	cp $(CURDIR)/debian/glquake2_80.png $(CURDIR)/debian/glquake2/usr/share/icons/hicolor/80x80/apps/glquake2_80.png
	# binary
	cp $(CURDIR)/$(NATASHA)arm/quake2 $(CURDIR)/debian/glquake2/usr/bin/quake2
	cp $(CURDIR)/$(NATASHA)arm/sdlquake2 $(CURDIR)/debian/glquake2/usr/bin/sdlquake2
	# lib
	cp $(CURDIR)/$(NATASHA)arm/gamearm.so $(CURDIR)/debian/glquake2/usr/share/quake2/baseq2/gamesarm.so
	cp $(CURDIR)/$(NATASHA)arm/ref_softsdl.so $(CURDIR)/debian/glquake2/usr/share/quake2/lib/ref_softsdl.so
	cp $(CURDIR)/$(NATASHA)arm/ref_softx.so $(CURDIR)/debian/glquake2/usr/share/quake2/lib/ref_softx.so
	cp $(CURDIR)/$(NATASHA)arm/ref_glx.so $(CURDIR)/debian/glquake2/usr/share/quake2/lib/ref_glx.so
	# resource
	cp $(CURDIR)/debian/config.cfg $(CURDIR)/debian/glquake2/usr/share/quake2/baseq2/config.cfg
	cp $(CURDIR)/resc/*.png $(CURDIR)/debian/glquake2/usr/share/quake2/resc


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
#	dh_installchangelogs 
#	dh_installdocs
#	dh_installexamples
#	dh_install
#	dh_installmenu
#	dh_installdebconf	
#	dh_installlogrotate
#	dh_installemacsen
#	dh_installpam
#	dh_installmime
#	dh_python
#	dh_installinit
#	dh_installcron
#	dh_installinfo
#	dh_installman
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
#	dh_perl
#	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
